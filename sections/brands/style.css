section.brands {
  --size: clamp(10rem, 1rem + 40vmin, 30rem);
  --gap: calc(var(--size) / 14);
  --duration: 100s;
  --scroll-start: 0;
  --scroll-end: calc(-100% - var(--gap));

  display: grid;
  place-items: center;

  .marquee {
    display: flex;
    overflow: hidden;
    user-select: none;
    gap: var(--gap);
    mask-image: linear-gradient(var(--mask-direction, to right),
        hsl(0 0% 0% / 0),
        hsl(0 0% 0% / 1) 20%,
        hsl(0 0% 0% / 1) 80%,
        hsl(0 0% 0% / 0));
  }

  .marquee__group {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: space-around;
    gap: var(--gap);
    min-width: 100%;
    animation: scroll-x var(--duration) linear infinite;
  }

  .marquee--vertical {
    --mask-direction: to bottom;
  }

  .marquee--vertical,
  .marquee--vertical .marquee__group {
    flex-direction: column;
  }

  .marquee--vertical .marquee__group {
    animation-name: scroll-y;
  }

  .marquee--reverse .marquee__group {
    animation-direction: reverse;
    animation-delay: -3s;
  }

  .marquee .image {
    display: grid;
    place-items: center;
    place-content: center;
    background: #dbd7d1;
    width: var(--size);
    aspect-ratio: 16/9;
    padding: calc(var(--size) / 10);
    border-radius: 0.5rem;
    overflow: hidden;

    img {
      max-height: 130px;
      width: 90%;
    }
  }

  .marquee--vertical .image {
    aspect-ratio: 1;
    width: calc(var(--size) / 1.5);
    padding: calc(var(--size) / 6);

    img {
      max-height: 100%;
      width: 100%;
    }
  }

  /* Parent wrapper */
  .wrapper {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    margin: auto;
    max-width: 100vw;
    height: 60vh;
    max-height: 60vh;
  }

  .wrapper--vertical {
    flex-direction: row;
    height: 70vh;
  }
}

@keyframes scroll-x {
  from {
    transform: translateX(var(--scroll-start));
  }

  to {
    transform: translateX(var(--scroll-end));
  }
}

@keyframes scroll-y {
  from {
    transform: translateY(var(--scroll-start));
  }

  to {
    transform: translateY(var(--scroll-end));
  }
}

@keyframes fade {
  to {
    opacity: 0;
    visibility: hidden;
  }
}

/* ********************* lenis ********************* */
html.lenis,
html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}

/* ********************* text fit ********************* */
.text-fit {
  display: flex;
  container-type: inline-size;

  --captured-length: initial;
  --support-sentinel: var(--captured-length, 9999px);

  &>[aria-hidden] {
    visibility: hidden;
  }

  &> :not([aria-hidden]) {
    flex-grow: 1;
    container-type: inline-size;

    --captured-length: 100cqi;
    --available-space: var(--captured-length);

    &>* {
      --support-sentinel: inherit;
      --captured-length: 100cqi;
      --ratio: tan(atan2(var(--available-space),
            var(--available-space) - var(--captured-length)));
      --font-size: clamp(1em,
          1em * var(--ratio),
          var(--max-font-size, infinity * 1px) - var(--support-sentinel));
      inline-size: var(--available-space);

      &:not(.text-fit) {
        display: block;
        font-size: var(--font-size);

        @container (inline-size > 0) {
          white-space: nowrap;
        }
      }

      &.text-fit {
        --captured-length2: var(--font-size);
        font-variation-settings:
          'opsz'
          tan(atan2(var(--captured-length2), 1px));
      }
    }
  }
}

@property --captured-length {
  syntax: "<length>";
  initial-value: 0px;
  inherits: true;
}

@property --captured-length2 {
  syntax: "<length>";
  initial-value: 0px;
  inherits: true;
}

/* ********************* shimmer button ********************* */
@property --rotate {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.shimmer-button {
  --bg-color: #b95634;
  --radius: 50px;
  --rotate: 0deg;
  padding: 4px 24px;
  border-radius: var(--radius);
  background: var(--bg-color);
  color: white;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  gap: 4px;

  svg {
    position: relative;
  }

  .fancy {
    position: absolute;
    inset: 0;

    &:before {
      content: "";
      background: conic-gradient(from var(--rotate),
          transparent 0%,
          white 5%,
          transparent 10%);
      position: absolute;
      inset: 0;
      animation: rotate 3s linear infinite;
    }

    &:after {
      content: "";
      background: var(--bg-color);
      position: absolute;
      inset: 2px;
      border-radius: calc(var(--radius) - 2px);
    }
  }

  .text {
    position: relative;
  }
}

@keyframes rotate {
  to {
    --rotate: 360deg;
  }
}

/* ********************* fade in ********************* */
dialog {
  margin: 0;
  max-width: 100vw;
  max-height: 100vh;
  height: 100vh;
  background-color: #222;
  animation: fade-out 0.7s ease-out;
}

dialog[open] {
  animation: fade-in 0.7s ease-out;
}

@keyframes fade-in {
  0% {
    opacity: 0;
    display: none;
  }

  100% {
    opacity: 1;
    display: block;
  }
}

@keyframes fade-out {
  0% {
    opacity: 1;
    display: block;
  }

  100% {
    opacity: 0;
    display: none;
  }
}
